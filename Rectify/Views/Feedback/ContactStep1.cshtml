@using Rectify.Models.ViewModels;
@model CustomerFeedbackViewModel

@{
    ViewData["Title"] = "Contact";
    Layout = "_Layout";
}
<head>
    <link rel="stylesheet" href="~/css/Customer.css" asp-append-version="true" />

</head>

<div class="container">
    <div class="box">
        <div style="display: flex; flex-direction: column; align-items: center; text-align: center; gap: 15px;">

            @* Owner image *@
            @if (!string.IsNullOrEmpty(Model.OwnerImageBase64))
            {
                <img id="ownerImage" src="@Model.OwnerImageBase64" class="rounded-image" style="width: 80px; height: 80px;" />
            }

            <div>
                <h2>
                    Hi, <span style="color: #ff1493">@Model.OwnerName from @Model.CompanyName</span> here, let's rectify your experience
                </h2>
                <h2>What happened?</h2>
            </div>
        </div>
        <form asp-action="ContactStep1" method="post">

            <div class="form-group" style="position: relative;">
                @* <label asp-for="Message">Message:</label> *@
                <textarea asp-for="Message" class="form-control light-grey-bg" id="messageTextarea" placeholder="Type Message here" required ></textarea>
                <button type="button" title="Click to start/stop voice input" id="micBtn" style="position: absolute; right: 5px; top: 5px; border: none; background: none; cursor: pointer;">
                    🎤
                </button>
                <span asp-validation-for="Message" class="text-danger"></span>
            </div>

            <input type="hidden" name="LogoImageBase64" value="@Model.LogoImageBase64" />
            <input type="hidden" name="OwnerImageBase64" value="@Model.OwnerImageBase64" />
            <input type="hidden" name="OwnerName" value="@Model.OwnerName" />
            <input type="hidden" name="SelectedCompanyId" value="@Model.SelectedCompanyId" />

            <div style="display: flex; justify-content: center; gap: 20px; margin-top: 20px;">
                <button type="submit" name="back" value="true" class="btn btn-pink" formnovalidate>Back</button>
                <button type="submit" class="btn btn-pink">Next</button>

            </div>

        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        

        // Listen for change in the dropdown
            $('#companyBranchSelect').change(function () {
                var selectedUserId = $(this).val();

                if (selectedUserId) {
                    // Make an AJAX request to fetch the logo and owner image
                    $.ajax({
                        url: '@Url.Action("GetCompanyImages", "Home")',
                        type: 'GET',
                        data: { companyID: selectedUserId },
                        success: function (data) {
                            // Update images with the new data
                            if (data.logoImageBase64) {
                                $('#companyLogo').attr('src', data.logoImageBase64);
                                $('#logoContainer').show();
                            } else {
                                $('#logoContainer').hide();
                            }

                            if (data.ownerImageBase64) {
                                $('#ownerImage').attr('src', data.ownerImageBase64);
                                $('#ownerImageContainer').show();
                            } else {
                                $('#ownerImageContainer').hide();
                            }
                        },
                        error: function () {
                            console.error('Error fetching images.');
                        }
                    });
                } else {
                    // Hide images if no company is selected
                    $('#logoContainer').hide();
                    $('#ownerImageContainer').hide();
                }
            });
    </script>
    <script>
        const micBtn = document.getElementById('micBtn');
const textarea = document.getElementById('messageTextarea');
let recognition;
let isListening = false;
let finalTranscript = '';

if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {
  const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
  recognition = new SpeechRecognition();

  recognition.continuous = true;
  recognition.interimResults = true;
  recognition.lang = 'en-US';

  recognition.onresult = (event) => {
    let interimTranscript = '';

    // Loop through results starting from the event result index
    for (let i = event.resultIndex; i < event.results.length; ++i) {
      if (event.results[i].isFinal) {
        finalTranscript += event.results[i][0].transcript + ' ';
      } else {
        interimTranscript += event.results[i][0].transcript;
      }
    }

    // Show combined final + interim in textarea, but only finalTranscript is saved permanently
    textarea.value = finalTranscript + interimTranscript;
  };

  recognition.onerror = (event) => {
    console.error('Speech recognition error', event.error);
    isListening = false;
    micBtn.textContent = '🎤';
  };

  recognition.onend = () => {
    isListening = false;
    micBtn.textContent = '🎤';
  };

  micBtn.addEventListener('click', () => {
    if (isListening) {
      recognition.stop();
      isListening = false;
      micBtn.textContent = '🎤';
    } else {
      finalTranscript = textarea.value + ' '; // start with existing text + space
      recognition.start();
      isListening = true;
      micBtn.textContent = '🛑';
    }
  });
} else {
  micBtn.style.display = 'none';
  console.warn('Speech Recognition API not supported in this browser.');
}

    </script>
    

}
