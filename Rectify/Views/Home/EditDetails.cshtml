@using Rectify.Models.ViewModels;
@model EditDetailsViewModel

@{
    ViewData["Title"] = "Edit Details";
    Layout = "_Layout";
    var id = Model.UserId;
}
<head>
    <link href="~/css/mobile.css" rel="stylesheet" asp-append-version="true" />
    <link href="~/css/Buttons.css" rel="stylesheet" asp-append-version="true" />
    <script src="https://cdn.jsdelivr.net/npm/qrcode/build/qrcode.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

</head>

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
        {
            <div>@error.ErrorMessage</div>
        }
    </div>
}
<div class="container">
    <div class="box">
        <form asp-action="EditDetails" method="post">
            @Html.AntiForgeryToken()
            <input type="hidden" asp-for="UserId" />

            <div class="mb-3">
                <label asp-for="Name" class="form-label">Full Name:</label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Email" class="form-label">Email:</label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="PhoneNumber" class="form-label">Phone Number:</label>
                <input asp-for="PhoneNumber" class="form-control" />
                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="PreferredContact" class="form-label">Preferred Contact:</label>
                <select asp-for="PreferredContact" class="form-select">
                    <option value="">-- Select --</option>
                    <option value="Email">Email</option>
                    <option value="WhatsApp">WhatsApp</option>
                </select>
                <span asp-validation-for="PreferredContact" class="text-danger"></span>
            </div>

            <div class="form-check mb-3 checkbox-grey">
                <input asp-for="Reports" class="form-check-input" type="checkbox" />
                <label asp-for="Reports" class="form-check-label">Receive Reports</label>
            </div>



            <button type="submit" class="btn btn-outline-pink">Save Changes</button>
            <button type="button" class="btn btn-outline-pink" onclick="handleEditCompany('@Model.UserId')">
                Edit Company Details
            </button>
        </form>

        
    </div>
</div>


<!-- QR Code Modal -->
<div class="modal fade" id="qrModal" tabindex="-1" aria-labelledby="qrModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content text-center">
            <div class="modal-header">
                <h5 class="modal-title" id="qrModalLabel">Company QR Code</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <img id="qrCodeImage" src="" alt="QR Code" class="img-fluid" />
            </div>
            <div class="modal-footer">
                <button class="btn btn-outline-pink" onclick="copyQrLink()">Copy Link</button>
                <button class="btn-outline-pink" id="saveQrBtn">Save Image</button>
                <button class="btn btn-outline-pink" id="printQrBtn">Print QR Code</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal for selecting a company -->
<div class="modal fade" id="companySelectModal" tabindex="-1" aria-labelledby="companySelectModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Select a Company to Edit</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="company-list">
                <!-- Company buttons will be inserted here -->
            </div>
        </div>
    </div>
</div>

<!--qr code options-->
<div class="modal fade" id="qrCompanySelectModal" tabindex="-1" aria-labelledby="qrCompanySelectModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Select a Company for QR Code</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="qr-company-list">
                <!-- QR company buttons will go here -->
            </div>
        </div>
    </div>
</div>


<script>
    function copyQrLink() {
        if (qrEncodedUrl) {
            navigator.clipboard.writeText(qrEncodedUrl)
                .then(() => alert("Link copied to clipboard!"))
                .catch(err => console.error("Failed to copy link: ", err));
        }
    }

        function handleQrCodeCompanySelect(userId) {
        fetch(`/Home/GetUserCompanies?userId=${encodeURIComponent(userId)}`)
            .then(res => res.json())
            .then(companies => {
                if (companies.length === 1) {
                    loadQrCode(companies[0].id); // Directly load for the only company
                } else if (companies.length > 1) {
                    const container = document.getElementById("company-list");
                    container.innerHTML = "";

                    companies.forEach(company => {
                        const btn = document.createElement("button");
                        btn.className = "btn btn-outline-pink w-100 mb-2";
                        btn.innerText = `${company.companyName} - ${company.branchAddress}`;
                        btn.onclick = () => {
                            const modal = bootstrap.Modal.getInstance(document.getElementById("companySelectModal"));
                            modal.hide();
                            loadQrCode(company.id);
                        };
                        container.appendChild(btn);
                    });

                    const modal = new bootstrap.Modal(document.getElementById("companySelectModal"));
                    modal.show();
                } else {
                    alert("No companies found for this user.");
                }
            })
            .catch(err => {
                console.error("Error fetching companies:", err);
                alert("Failed to load companies.");
            });
    }

             let currentCompanyId = null;

                function loadQrCode(companyId) {
                    currentCompanyId = companyId;  // store the selected company id
                    const baseUrl = window.location.origin;
                    qrEncodedUrl = `${baseUrl}/Feedback/ContactStep1?companyId=${encodeURIComponent(companyId)}`;

                    const img = document.getElementById("qrCodeImage");
                    img.src = `/Home/GenerateQrCode?companyId=${encodeURIComponent(companyId)}&t=${Date.now()}`;

                    const qrModal = new bootstrap.Modal(document.getElementById("qrModal"));
                    qrModal.show();
                }

    function handleEditCompany(userId) {
        fetch(`/Home/GetUserCompanies?userId=${encodeURIComponent(userId)}`)
            .then(res => res.json())
            .then(companies => {
                if (companies.length === 1) {
                    // Redirect directly if only one company
                    window.location.href = `/Home/EditCompanyDetails?companyID=${companies[0].id}`;
                } else if (companies.length > 1) {
                    const container = document.getElementById("company-list");
                    container.innerHTML = "";

                    companies.forEach(company => {
                        const btn = document.createElement("button");
                        btn.className = "btn btn-outline-pink w-100 mb-2";
                        btn.innerText = `${company.companyName} - ${company.branchAddress}`;
                        btn.onclick = () => {
                            window.location.href = `/Home/EditCompanyDetails?companyID=${company.id}`;
                        };
                        container.appendChild(btn);
                    });

                    const modal = new bootstrap.Modal(document.getElementById("companySelectModal"));
                    modal.show();
                } else {
                    alert("No companies found for this user.");
                }
            })
            .catch(err => {
                console.error("Error fetching companies:", err);
                alert("Failed to load companies.");
            });
    }

    function printQrCode() {
                if (!currentCompanyId) {
                    alert("No company selected for printing.");
                    return;
                }

                const iframe = document.createElement('iframe');
                iframe.style.display = 'none';
                iframe.src = `/Home/PrintQRCode?companyId=${encodeURIComponent(currentCompanyId)}`;
                document.body.appendChild(iframe);
                iframe.onload = function () {
                    setTimeout(() => document.body.removeChild(iframe), 3000);
                };
            }

            document.getElementById("printQrBtn").addEventListener("click", printQrCode);

    document.getElementById("saveQrBtn").addEventListener("click", function () {
            if (!currentCompanyId) {
                alert("No company selected.");
                return;
            }

            const url = `/Home/GenerateQrCodeWithText?companyId=${encodeURIComponent(currentCompanyId)}&download=true&t=${Date.now()}`;
            const fileName = `QRCode_${currentCompanyId}.png`;

            // Create a temporary link and simulate click
            const a = document.createElement("a");
            a.href = url;
            a.download = fileName;
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
        });

    //mobile support
    window.addEventListener('DOMContentLoaded', function () {
        const isMobile = window.innerWidth <= 768;
        if (isMobile) {
            document.getElementById('ticketHeader')?.classList.add('mobile-stack');
        }
    })
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
